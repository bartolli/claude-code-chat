{
  "name": "claude-code-chat-modern",
  "displayName": "Claude Code GUI - Modern UI",
  "description": "Beautiful Modern Claude Code GUI Interface with React UI for VS Code",
  "version": "0.2.0",
  "publisher": "claude-extension-dev",
  "author": "Claude Extension Development Team",
  "repository": {
    "type": "git",
    "url": "https://github.com/claude-extension-dev/claude-code-chat-modern"
  },
  "license": "SEE LICENSE IN LICENSE",
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "Other",
    "AI",
    "Chat",
    "Machine Learning",
    "Snippets",
    "Programming Languages",
    "Education",
    "Testing",
    "Formatters",
    "Linters"
  ],
  "keywords": [
    "claude code",
    "code explanation",
    "code generation",
    "code summary",
    "code transform",
    "vibe coding",
    "prompt language",
    "copilot",
    "claude",
    "ai",
    "assistant",
    "chatbot",
    "chat",
    "anthropic",
    "code",
    "programming",
    "development",
    "productivity"
  ],
  "icon": "icon.png",
  "main": "./out/extension.js",
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "commands": [
      {
        "command": "claude-code-chat-modern.openChat",
        "title": "Open Claude Code GUI",
        "category": "Claude Code GUI",
        "icon": "icon.png"
      },
      {
        "command": "claude-code-chat.migration.showFlags",
        "title": "Show Migration Feature Flags",
        "category": "Claude Code Migration"
      },
      {
        "command": "claude-code-chat.migration.toggleStateManager",
        "title": "Toggle Redux StateManager",
        "category": "Claude Code Migration"
      },
      {
        "command": "claude-code-chat.migration.resetFlags",
        "title": "Reset Migration Flags",
        "category": "Claude Code Migration"
      }
    ],
    "keybindings": [
      {
        "command": "claude-code-chat-modern.openChat",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "claude-code-chat-modern.openChat"
        }
      ],
      "editor/context": [
        {
          "command": "claude-code-chat-modern.openChat",
          "group": "claude@1",
          "when": "editorTextFocus"
        }
      ],
      "editor/title": [
        {
          "command": "claude-code-chat-modern.openChat",
          "group": "navigation@1",
          "when": "true"
        }
      ],
      "editor/title/context": [
        {
          "command": "claude-code-chat-modern.openChat",
          "group": "claude@1"
        }
      ],
      "explorer/context": [
        {
          "command": "claude-code-chat-modern.openChat",
          "group": "claude@1"
        }
      ],
      "scm/title": [
        {
          "command": "claude-code-chat-modern.openChat",
          "group": "navigation@1",
          "when": "true"
        }
      ],
      "view/title": [
        {
          "command": "claude-code-chat-modern.openChat",
          "group": "navigation@1",
          "when": "view == workbench.explorer.fileView"
        }
      ],
      "touchBar": [
        {
          "command": "claude-code-chat-modern.openChat",
          "group": "editing",
          "when": "true"
        }
      ],
      "menuBar/file": [
        {
          "command": "claude-code-chat-modern.openChat",
          "group": "1_new@1"
        }
      ]
    },
    "views": {
      "claude-code-chat-modern": [
        {
          "id": "claude-code-chat-modern.chat",
          "name": "Claude Code GUI",
          "when": "true",
          "icon": "icon.png",
          "contextualTitle": "Claude Code GUI"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "claude-code-chat-modern",
          "title": "Claude Code GUI",
          "icon": "icon.png"
        }
      ]
    },
    "configuration": {
      "title": "Claude Code GUI",
      "properties": {
        "claudeCodeChatModern.wsl.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable WSL integration for running Claude"
        },
        "claudeCodeChatModern.wsl.distro": {
          "type": "string",
          "default": "Ubuntu",
          "description": "WSL distribution name (e.g., Ubuntu, Debian)"
        },
        "claudeCodeChatModern.wsl.nodePath": {
          "type": "string",
          "default": "/usr/bin/node",
          "description": "Path to Node.js in the WSL distribution"
        },
        "claudeCodeChatModern.wsl.claudePath": {
          "type": "string",
          "default": "/usr/local/bin/claude",
          "description": "Path to Claude executable in the WSL distribution"
        },
        "claudeCodeChatModern.thinking.intensity": {
          "type": "string",
          "enum": [
            "think",
            "think-hard",
            "think-harder",
            "ultrathink"
          ],
          "default": "think",
          "description": "Thinking mode intensity level. Higher levels provide more detailed reasoning but consume more tokens."
        },
        "claudeCodeChatModern.authMethod": {
          "type": "string",
          "enum": [
            "auto",
            "apiKey",
            "interactive"
          ],
          "default": "auto",
          "description": "Authentication method: 'auto' (detects based on environment), 'apiKey' (requires ANTHROPIC_API_KEY), or 'interactive' (requires Claude Pro/Team subscription and login)"
        },
        "claudeCodeChatModern.apiKey": {
          "type": "string",
          "default": "",
          "description": "Anthropic API key (optional - can also be set via ANTHROPIC_API_KEY environment variable)",
          "markdownDescription": "Your Anthropic API key. Get one from [console.anthropic.com](https://console.anthropic.com/). Can also be set via `ANTHROPIC_API_KEY` environment variable."
        },
        "claude-code-chat.migration.useReduxStateManager": {
          "type": "boolean",
          "default": false,
          "description": "Enable Redux StateManager (migration flag)"
        },
        "claude-code-chat.migration.enableParallelStateValidation": {
          "type": "boolean",
          "default": false,
          "description": "Enable parallel state validation during migration"
        },
        "claude-code-chat.migration.logStateTransitions": {
          "type": "boolean",
          "default": false,
          "description": "Log all state transitions for debugging"
        },
        "claude-code-chat.migration.enableActionMapping": {
          "type": "boolean",
          "default": false,
          "description": "Enable action mapping layer"
        },
        "claude-code-chat.migration.rolloutPercentage": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "maximum": 100,
          "description": "Percentage of users to enable Redux StateManager for (0-100)"
        },
        "claude-code-chat.migration.logUnmappedActions": {
          "type": "boolean",
          "default": true,
          "description": "Log unmapped actions during migration"
        },
        "claude-code-chat.migration.logStateDiscrepancies": {
          "type": "boolean",
          "default": true,
          "description": "Log state discrepancies between SimpleStateManager and StateManager"
        },
        "claude-code-chat.migration.enablePerformanceMetrics": {
          "type": "boolean",
          "default": true,
          "description": "Enable performance metrics collection"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run build:extension && npm run build:webview",
    "compile": "tsc -p ./",
    "build:extension": "webpack --config webpack.extension.config.js",
    "build:webview": "webpack --mode production",
    "watch": "tsc -watch -p ./",
    "watch:extension": "webpack --config webpack.extension.config.js --watch",
    "dev:webview": "webpack --mode development --watch",
    "dev": "concurrently \"npm run watch:extension\" \"npm run dev:webview\"",
    "serve": "webpack serve --mode development --open",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.7",
    "@types/styled-components": "^5.1.34",
    "@types/vscode": "^1.95.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.5.0",
    "autoprefixer": "^10.4.21",
    "concurrently": "^9.2.0",
    "copy-webpack-plugin": "^12.0.2",
    "css-loader": "^7.1.2",
    "eslint": "^9.25.1",
    "html-webpack-plugin": "^5.6.3",
    "postcss": "^8.5.6",
    "postcss-loader": "^8.1.1",
    "style-loader": "^4.0.0",
    "tailwindcss": "^3.4.17",
    "ts-loader": "^9.5.2",
    "typescript": "^5.8.3",
    "webpack": "^5.99.9",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.2.2"
  },
  "dependencies": {
    "@anthropic-ai/claude-code": "^1.0.41",
    "@anthropic-ai/sdk": "^0.55.1",
    "@headlessui/react": "^2.2.4",
    "@heroicons/react": "^2.2.0",
    "@modelcontextprotocol/sdk": "^1.13.2",
    "@reduxjs/toolkit": "^2.8.2",
    "@tiptap/extension-image": "^2.22.3",
    "@tiptap/extension-mention": "^2.22.3",
    "@tiptap/extension-placeholder": "^2.22.3",
    "@tiptap/react": "^2.22.3",
    "@tiptap/starter-kit": "^2.22.3",
    "@types/uuid": "^10.0.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-redux": "^8.1.3",
    "react-remark": "^2.1.0",
    "rehype-katex": "^7.0.1",
    "remark-math": "^6.0.0",
    "styled-components": "^5.3.11",
    "unist-util-visit": "^5.0.0",
    "uuid": "^9.0.1"
  }
}
